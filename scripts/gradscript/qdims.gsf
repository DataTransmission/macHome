***************************************************************************************
*	$Id: qdims.gsf,v 1.14 2007/07/03 03:03:17 bguan Exp bguan $
*	Copyright (C) 2004 Bin Guan.
*	Distributed under GNU/GPL.
***************************************************************************************
function qdims()
*
* Get dimension information as global variables.
*
'q dims'
lx=sublin(result,2)
ly=sublin(result,3)
lz=sublin(result,4)
lt=sublin(result,5)

if (subwrd(lx,7)='to')
   _lons=subwrd(lx,6)
   _lone=subwrd(lx,8)
   _xs=subwrd(lx,11)
   _xe=subwrd(lx,13)
   _nx=_xe-_xs+1
   _dlon=(_lone-_lons)/(_xe-_xs)
   _xdef='XDEF '_nx' LINEAR '_lons' '_dlon
else
   _lons=subwrd(lx,6)
   _lone=subwrd(lx,6)
   _xs=subwrd(lx,9);
   _xe=subwrd(lx,9);
   _nx=_xe-_xs+1
   _dlon=9.87654321
   _xdef='XDEF '_nx' LEVELS '_lons
endif

if (subwrd(ly,7)='to')
   _lats=subwrd(ly,6)
   _late=subwrd(ly,8)
   _ys=subwrd(ly,11); if(_ys<1 & _ys>0.99999);_ys=1;endif
   _ye=subwrd(ly,13);
   _ny=_ye-_ys+1
   _dlat=(_late-_lats)/(_ye-_ys)
   _ydef='YDEF '_ny' LINEAR '_lats' '_dlat
else
   _lats=subwrd(ly,6)
   _late=subwrd(ly,6)
   _ys=subwrd(ly,9)
   _ye=subwrd(ly,9)
   _ny=_ye-_ys+1
   _dlat=9.87654321
   _ydef='YDEF '_ny' LEVELS '_lats
endif

if (subwrd(lz,7)='to')
   _levs=subwrd(lz,6)
   _leve=subwrd(lz,8)
   _zs=subwrd(lz,11)
   _ze=subwrd(lz,13)
   _dlev=(_leve-_levs)/(_ze-_zs)
else
   _levs=subwrd(lz,6)
   _leve=subwrd(lz,6)
   _zs=subwrd(lz,9)
   _ze=subwrd(lz,9)
   _dlev=9.87654321
endif
_nz=_ze-_zs+1
if(_nz=1)
_nz0=0
else
_nz0=_nz
endif

_zdef='ZDEF '_nz' LEVELS'
cnt=_zs
while(cnt<=_ze)
'set z 'cnt
level=subwrd(result,4)
_zdef=_zdef' 'level
cnt=cnt+1
endwhile
'set z '_zs' '_ze

if (subwrd(lt,7)='to')
   _tims=subwrd(lt,6)
   _time=subwrd(lt,8)
   _ts=subwrd(lt,11)
   _te=subwrd(lt,13)
else
   _tims=subwrd(lt,6)
   _time=subwrd(lt,6)
   _ts=subwrd(lt,9)
   _te=subwrd(lt,9)
endif
_yrs=substr(_tims,math_strlen(_tims)-3,math_strlen(_tims))
_yre=substr(_time,math_strlen(_time)-3,math_strlen(_time))
* In the above two lines, year is obtained as the last four digits of the time expression. This is always correct.
* If count from the left, the digit location will depend on whether minutes are specified in the time expression (e.g., 00Z01JAN1999 vs. 00:00Z01JAN1999).
_nt=_te-_ts+1
_dtim=time_incr()
_tdef='TDEF '_nt' LINEAR '_tims' '_dtim

return
***************************************************************************************
function time_incr()
*
* Get time increment from the default .ctl file.
*
'q ctlinfo'
if(result='No Files Open')
return 'unknown'
endif

lines=1
while(1)
lin=sublin(result,lines)
if(subwrd(lin,1)='tdef'|subwrd(lin,1)='TDEF')
return subwrd(lin,5)
endif
lines=lines+1
endwhile
